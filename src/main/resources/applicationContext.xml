<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:property-placeholder location="classpath:db.properties"/>

    <context:component-scan base-package="cn"/>

    <bean class="cn.fc.context.AlbumContext" id="albumContext">
        <property name="pageSize" value="20"/>
        <property name="devMode" value="true"/>
    </bean>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClassName" value="${jdbc.driverClass}"/>
    </bean>

    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mappers/*.xml"/>
        <property name="typeAliasesPackage" value="cn.fc.bean"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                            supportMethodsArguments=true
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <aop:config proxy-target-class="true">
        <aop:pointcut id="serviceMethod" expression="execution(* cn.fc.service.*.*(..))"/>
        <aop:pointcut id="authorityUpdatePC" expression="execution(* cn.fc.service.AuthorityService.*(..))"/>

        <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" order="2"/>

        <aop:aspect ref="myAdvice" order="1">
            <aop:before method="before" pointcut-ref="serviceMethod"/>
            <aop:after method="after" pointcut-ref="serviceMethod"/>
            <aop:around method="around" pointcut-ref="serviceMethod"/>
        </aop:aspect>

        <aop:aspect ref="authorityUpdateAdvice" order="3">
            <aop:after method="after" pointcut-ref="authorityUpdatePC"/>
        </aop:aspect>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="list*" read-only="true"/>
            <tx:method name="login" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.fc.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
    </bean>

    <mvc:annotation-driven validator="validator"/>
    <mvc:resources location="/WEB-INF/dist/" mapping="/dist/**"/>
    <mvc:resources location="/WEB-INF/plugins/" mapping="/plugins/**"/>
    <mvc:resources location="/WEB-INF/upload/" mapping="/upload/**"/>
    <mvc:interceptors>
        <bean id="loginInterceptor" class="cn.fc.interceptor.LoginInterceptor"/>
        <bean id="requestTimerInterceptor" class="cn.fc.interceptor.RequestTimerInterceptor"/>
        <bean id="authInterceptor" class="cn.fc.interceptor.AuthInterceptor"/>
    </mvc:interceptors>
    <mvc:view-controller path="/" view-name="login"/>
    <!-- 校验错误信息配置文件 -->
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <!--资源文件名-->
        <property name="basename" value="classpath:validationMessage"/>
        <!-- 资源文件编码格式 -->
        <property name="fileEncodings" value="UTF-8"/>
        <!-- 对资源文件内容缓存时间，单位秒 -->
        <property name="cacheSeconds" value="120"/>
    </bean>
    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <!-- hibernate校验器-->
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

</beans>